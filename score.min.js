!function($){const merge=(target,source)=>{for(let key of Object.keys(source))source[key]instanceof Object&&Object.assign(source[key],merge(target[key],source[key]));return Object.assign(target||{},source),target};$.fn.score=function(options){const settings=merge({starColor:"gold",backgroundColor:"transparent",editable:!1,integerOnly:!1,zeroAvailable:!1,send:{sendable:!1,name:"star"},display:{showNumber:!1,placeLimit:1,textColor:"gold"},point:{max:5,rate:0}},options=options||{}),getPercentFromPoint=function(max,rate){return rate/max*100},getPercentFromPointInteger=function(max,rate){const segment=100/max;return Math.floor((getPercentFromPoint(max,rate)+segment/2)/segment)*segment},getPointFromPercent=function(max,percent,limit){const value=max*percent/100;return value.toFixed(limit||settings.display.placeLimit)},getFillStarText=function(size){return"★".repeat(size)},getEmptyStarText=function(size){return"☆".repeat(size)};function pointHandler(e){const data=this.parentNode._data,width=parseInt(window.getComputedStyle(this,null).width);let percent=e.offsetX/width*100;settings.zeroAvailable||(percent=0==percent?.1:percent),$(this).find(".foreground").css("width",percent+"%"),settings.display.showNumber&&$(this).parent().find(".display-panel").text(getPointFromPercent(data.max,percent)),settings.send&&settings.send.sendable&&$(this).parent().find(".point-input").val(getPointFromPercent(data.max,percent))}function pointIntegerHandler(e){const data=this.parentNode._data,width=parseInt(window.getComputedStyle(this,null).width),segment=100/data.max;let percent=e.offsetX/width*100;percent=(Math.floor((percent-.001)/segment)+1)*segment,settings.zeroAvailable||0==percent&&(percent=segment),$(this).find(".foreground").css("width",percent+"%"),settings.display.showNumber&&$(this).parent().find(".display-panel").text(getPointFromPercent(data.max,percent)),settings.send&&settings.send.sendable&&$(this).parent().find(".point-input").val(getPointFromPercent(data.max,percent))}function enterHandler(e){settings.editable&&(settings.integerOnly?($(this).click(pointIntegerHandler),$(this).mousemove(pointIntegerHandler)):($(this).click(pointHandler),$(this).mousemove(pointHandler)))}return this.each((function(){$(this).css({display:"inline-flex",cursor:"pointer",color:settings.starColor,"background-color":settings.backgroundColor,"white-space":"nowrap"}),this._data={max:$(this).data("max")||settings.point.max,rate:$(this).data("rate")||settings.point.rate};const percent=settings.integerOnly?getPercentFromPointInteger(this._data.max,this._data.rate):getPercentFromPoint(this._data.max,this._data.rate),star=$("<div>").addClass("star").css({color:"inherit","background-color":"inherit",position:"relative",display:"inline-flex"}),foreground=$("<div>").addClass("foreground").css({overflow:"hidden",width:percent+"%",color:"inherit","background-color":"inherit"}).text(getFillStarText(this._data.max)),background=$("<div>").addClass("background").css({position:"absolute",color:"inherit","background-color":"inherit"}).text(getEmptyStarText(this._data.max));if(star.append(foreground).append(background).appendTo(this),settings.display.showNumber){const displayPanel=$("<div>").addClass("display-panel").css("color",settings.display.textColor).text(this._data.rate.toFixed(settings.display.placeLimit));displayPanel.appendTo(this)}if(settings.send&&settings.send.sendable){const input=$("<input>").attr("type","hidden").attr("name",settings.send.name).addClass("point-input");settings.integerOnly,input.val(getPointFromPercent(settings.point.max,percent)),input.appendTo(this)}settings.editable&&(settings.integerOnly?star.click(pointIntegerHandler):star.click(pointHandler))}))}}(jQuery);